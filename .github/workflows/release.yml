name: Release

on: push
  # push:
  #   tags:
  #   - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      CSC_LINK: ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Dependencies
      run: npm install
    - name: Build production
      run: npm run build
    - uses: actions/upload-artifact@v2
      with:
        name: macos
        path: dist/*.dmg
    - uses: actions/upload-artifact@v2
      with:
        name: windows
        path: dist/*.exe
      
  #release:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v2
  #  - uses: actions/download-artifact@v2
  #    with:
  #      path: dist
  #  - name: Create Release
  #    id: create_release
  #    uses: actions/create-release@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      tag_name: ${{ github.ref }}
  #      release_name: ${{ github.ref }}
  #      draft: true
  #      prerelease: false
  #  - name: Rename dist files
  #    run: |
  #      mv dist/macos/*.dmg dist/macos.dmg
  #      mv dist/windows/*.exe dist/windows.exe
  #  - name: Get the version
  #    id: get_appinfo
  #    run: |
  #      echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
  #      echo ::set-output name=APPNAME::$(< package.json jq -r .name)
  #  - name: Upload Release Asset
  #    uses: actions/upload-release-asset@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      upload_url: ${{ steps.create_release.outputs.upload_url }}
  #      asset_path: dist/macos.dmg
  #      asset_name: ${{ steps.get_appinfo.outputs.APPNAME }}-${{ steps.get_appinfo.outputs.VERSION }}-macos.dmg
  #      asset_content_type: application/force-download
  #  - name: Upload Release Asset
  #    uses: actions/upload-release-asset@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      upload_url: ${{ steps.create_release.outputs.upload_url }}
  #      asset_path: dist/windows.exe
  #      asset_name: ${{ steps.get_appinfo.outputs.APPNAME }}-${{ steps.get_appinfo.outputs.VERSION }}-windows.exe
  #      asset_content_type: application/force-download
